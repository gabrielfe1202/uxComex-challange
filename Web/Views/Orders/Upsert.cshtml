@using UXComex_challenge.Domain.Entities
@using UXComex_challenge.Domain.ObjectValues
@model Order

@{
    ViewData["Title"] = "Clients Upsert";
    List<string> statusList = new List<string>
    {
        "Pendente",
        "Processando",
        "Enviado",
        "Entregue",
        "Cancelado",
        "Novo"
    };
}

<section>
    <div class="container">
        <h2 class="text-center">Pedido</h2>

        <!-- Cliente -->
        <div class="panel panel-primary">
            <div class="panel-heading">Cliente</div>
            <div class="panel-body">
                @if (Model.Client == null)
                {
                    <div class="form-group">
                        <label for="ClientId">Cliente:</label>
                        <select class="form-control" id="ClientId" name="ClientId">
                            <option disabled selected>Escolha um cliente...</option>
                            @foreach(Client client in (List<Client>)ViewBag.clients)
                            {
                                <option value="@client.Id">@client.Name - @client.Email</option>
                            }
                        </select>
                    </div>
                }
                else
                {
                    <input type="hidden" id="ClientId" value="@Model.Client.Id" />
                    <div>
                        <div><b>Nome:</b> @Model.Client.Name</div>
                        <div><b>Email:</b> @Model.Client.Email</div>
                        <div><b>Telefone:</b> @Model.Client.PhoneNumber</div>
                    </div>
                }
            </div>
        </div>

        <!-- Produtos -->
        <div class="panel panel-success">
            <div class="panel-heading">Produtos</div>
            <div class="panel-body">
                @if(Model.Id == 0){
                    <div class="form-group">
                        <label for="produtoSelect">Produto:</label>
                        <select class="form-control" id="produtoSelect">
                            <option disabled selected>Escolha um produto...</option>
                            @foreach(Product product in (List<Product>)ViewBag.products)
                            {
                                <option value="@product.Id" data-nome="@product.Name" data-preco="@product.Price">@product.Name</option>
                            }
                        </select>
                    </div>
                    <button class="btn btn-primary" onclick="adicionarProduto()">Adicionar Produto</button>
                }


                <table class="table table-bordered table-hover mt-20" id="tabelaProdutos">
                    <thead>
                        <tr>
                            <th>Produto</th>
                            <th>Preço Unitário</th>
                            <th>Qtd</th>
                            <th>Total</th>
                            @if (Model.Id == 0)
                            {
                                <th>Ações</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(OrderItem item in Model.Items)
                        {
                            <tr>
                                <td>@item.ProductName</td>
                                <td>R$ @item.UnitPrice</td>
                                <td>@item.Quantity</td>
                                <td>@(item.UnitPrice * item.Quantity)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Resumo -->
        <div class="panel panel-default">
            <div class="panel-heading">Resumo do Pedido</div>
            <div class="panel-body">
                <p><strong>Total Geral:</strong> R$ <span id="totalGeral">@Model.Total</span></p>
                @if (Model.Id == 0)
                {
                    <button class="btn btn-success" onclick="finalizarPedido()">Finalizar Pedido</button>
                }
            </div>
        </div>
        @if(Model.Id != 0){
            <div class="panel panel-primary">
                <div class="panel-heading">Status</div>
                <div class="panel-body">
                    <div class="form-group">
                        <select class="form-control" name="status" id="status">
                            @foreach(string status in statusList)
                            {
                                <option value="@status" selected="@(status == Model.Status ? "selected" : null)">@status</option>
                            }
                        </select>
                        <button class="btn btn-primary" style="margin-top: 15px" onclick="alterarStatus()">Alterar status</button>
                    </div>
                </div>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script>
        var produtosAdicionados = [];

        function adicionarProduto() {
            var select = document.getElementById("produtoSelect");
            var selected = select.options[select.selectedIndex];
            var id = selected.value;
            var nome = selected.getAttribute("data-nome");
            var preco = parseFloat(selected.getAttribute("data-preco"));

            if (!id) return;

            var existente = produtosAdicionados.find(p => p.id === id);
            if (existente) {
                existente.qtd++;
            } else {
                produtosAdicionados.push({ id: id, nome: nome, preco: preco, qtd: 1 });
            }

            renderizarTabela();
        }

        function removerProduto(id) {
            produtosAdicionados = produtosAdicionados.filter(p => p.id !== id);
            renderizarTabela();
        }

        function atualizarQtd(id, novaQtd) {
            var produto = produtosAdicionados.find(p => p.id === id);
            if (produto) {
                produto.qtd = parseInt(novaQtd);
                renderizarTabela();
            }
        }

        function renderizarTabela() {
            var tbody = document.querySelector("#tabelaProdutos tbody");
            var total = 0;
            tbody.innerHTML = "";

            produtosAdicionados.forEach(function(prod) {
                var subtotal = prod.preco * prod.qtd;
                total += subtotal;

                var tr = document.createElement("tr");
                tr.innerHTML = `
                    <td>${prod.nome}</td>
                    <td>R$ ${prod.preco.toFixed(2)}</td>
                    <td>
                        <input type="number" class="form-control form-control-inline" min="1" value="${prod.qtd}"
                        onchange="atualizarQtd('${prod.id}', this.value)">
                    </td>
                    <td>R$ ${subtotal.toFixed(2)}</td>
                    <td>
                        <button class="btn btn-danger btn-xs" onclick="removerProduto('${prod.id}')">Remover</button>
                    </td>
                `;
                tbody.appendChild(tr);
            });

            document.getElementById("totalGeral").innerText = total.toFixed(2);
        }

        function finalizarPedido() {
            var clienteId = document.getElementById("ClientId")?.value;

            if (!clienteId) {
                alert("Selecione um cliente.");
                return;
            }

            if (produtosAdicionados.length === 0) {
                alert("Adicione pelo menos um produto.");
                return;
            }

            var itens = produtosAdicionados.map(p => ({
                ProductId: parseInt(p.id),
                Quantity: p.qtd,
                UnitPrice: p.preco
            }));

            var order = {
                ClientId: parseInt(clienteId),
                Items: itens
            };

            console.log(order)

            fetch('/Orders/Save', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(order)
            })
            .then(response => {
                if (response.ok) {
                    alert("Pedido salvo com sucesso!");
                    window.location.href = '/Order/Index';
                } else {
                    return response.text().then(text => { throw new Error(text) });
                }
            })
            .catch(error => {
                console.error("Erro ao salvar pedido:", error);
                      let mensagem = error.toString();

        // Remove o prefixo "Error: System.Exception: " se existir
        mensagem = mensagem.replace(/^Error: System\.Exception:\s*/, '').split('\n')[0];

        alert(mensagem);
            });
        }
        
        function alterarStatus() {
            var statusSelecionado = document.getElementById("status").value;
            var orderId = @Model.Id;

            fetch(`/Orders/AlterarStatus/@Model.Id`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(statusSelecionado)
            })
            .then(response => {
                if (response.ok) {
                    alert("Status atualizado com sucesso!");
                } else {
                    return response.text().then(text => { throw new Error(text) });
                }
            })
            .catch(error => {
                console.error("Erro ao alterar status:", error);
                alert("Erro ao alterar status: " + error.message);
            });
        }

        
    </script>

    <style>
        .panel-heading {
            font-weight: bold;
        }

        .form-control-inline {
            display: inline-block;
            width: auto;
            vertical-align: middle;
        }

        .mt-20 {
            margin-top: 20px;
        }
    </style>
}
